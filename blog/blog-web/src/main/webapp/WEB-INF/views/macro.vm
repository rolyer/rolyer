#**
 * spring.vm
 *
 * This file consists of a collection of Velocity macros aimed at easing
 * some of the common requirements of web applications - in particular
 * handling of forms.
 *
 * Spring's Velocity support will automatically make this file and therefore
 * all macros within it available to any application using Spring's
 * VelocityConfigurer.
 *
 * To take advantage of these macros, the "exposeSpringMacroHelpers" property
 * of the VelocityView class needs to be set to "true". This will expose a
 * RequestContext under the name "springMacroRequestContext", as needed by
 * the macros in this library.
 *
 * @author Darren Davison
 * @author Juergen Hoeller
 * @since 1.1
 *#
#**
 * springMessage
 *
 * Macro to translate a message code into a message.
 *#
#macro( springMessage $code )$springMacroRequestContext.getMessage($code)#end

#**
 * springMessageText
 *
 * Macro to translate a message code into a message,
 * using the given default text if no message found.
 *#
#macro( springMessageText $code $text )$springMacroRequestContext.getMessage($code, $text)#end

#**
 * springTheme
 *
 * Macro to translate a theme message code into a string.
 *#
#macro( springTheme $code )$springMacroRequestContext.getThemeMessage($code)#end

#**
 * springThemeText
 *
 * Macro to translate a theme message code into a string,
 * using the given default text if no message found.
 *#
#macro( springThemeText $code $text )$springMacroRequestContext.getThemeMessage($code, $text)#end

#**
 * springUrl
 *
 * Takes a relative URL and makes it absolute from the server root by
 * adding the context root for the web application.
 *#
#macro( springUrl $relativeUrl )$springMacroRequestContext.getContextPath()${relativeUrl}#end

#**
 * springBind
 *
 * Exposes a BindStatus object for the given bind path, which can be
 * a bean (e.g. "person") to get global errors, or a bean property
 * (e.g. "person.name") to get field errors. Can be called multiple times
 * within a form to bind to multiple command objects and/or field names.
 *
 * This macro will participate in the default HTML escape setting for the given
 * RequestContext. This can be customized by calling "setDefaultHtmlEscape"
 * on the "springMacroRequestContext" context variable, or via the
 * "defaultHtmlEscape" context-param in web.xml (same as for the JSP bind tag).
 * Also regards a "springHtmlEscape" variable in the template context.
 *
 * Producing no output, the following context variable will be available
 * each time this macro is referenced:
 *
 *   $status : a BindStatus instance holding the command object name,
 *   expression, value, and error codes and messages for the path supplied
 *
 * @param $path : the path (string value) of the value required to bind to.
 *   Spring defaults to a command name of "command" but this can be overridden
 *   by user config.
 *#
#macro( springBind $path )
    #if("$!springHtmlEscape" != "")
        #set( $status = $springMacroRequestContext.getBindStatus($path, $springHtmlEscape) )
    #else
        #set( $status = $springMacroRequestContext.getBindStatus($path) )
    #end
#end

#**
 * springBindEscaped
 *
 * Similar to springBind, but takes an explicit HTML escape flag rather
 * than relying on the default HTML escape setting.
 *#
#macro( springBindEscaped $path $htmlEscape )
    #set( $status = $springMacroRequestContext.getBindStatus($path, $htmlEscape) )
#end

#**
 * springFormInput
 *
 * Display a form input field of type 'text' and bind it to an attribute
 * of a command or bean.
 *
 * @param path the name of the field to bind to
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
 *
 *#
#macro( springFormInput $path $attributes )
    #springBind($path)
    <input type="text" id="${status.expression}" name="${status.expression}" value="$!status.value" ${attributes}#springCloseTag()
#end

#**
 * springFormPasswordInput
 *
 * Display a form input field of type 'password' and bind it to an attribute
 * of a command or bean.  No value will ever be specified for this field regardless
 * of whether one exists or not.  For hopefully obvious reasons!
 *
 * @param path the name of the field to bind to
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
 *
 *#
#macro( springFormPasswordInput $path $attributes )
    #springBind($path)
    <input type="password" id="${status.expression}" name="${status.expression}" value="" ${attributes}#springCloseTag()
#end

#**
 * springFormHiddenInput
 *
 * Generate a form input field of type 'hidden' and bind it to an attribute
 * of a command or bean.
 *
 * @param path the name of the field to bind to
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
 *
 *#
#macro( springFormHiddenInput $path $attributes )
    #springBind($path)
    <input type="hidden" id="${status.expression}" name="${status.expression}" value="$!status.value" ${attributes}#springCloseTag()
#end

#**
 * formTextArea
 *
 * display a text area and bind it to an attribute
 * of a command or bean
 *
 * @param path the name of the field to bind to
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
 *
 *#
#macro( springFormTextarea $path $attributes )
    #springBind($path)
    <textarea id="${status.expression}" name="${status.expression}" ${attributes}>$!status.value</textarea>
#end

#**
 * springFormSingleSelect
 *
 * Show a selectbox (dropdown) input element allowing a single value to be chosen
 * from a list of options.
 *
 * The null check for $status.value leverages Velocity's 'quiet' notation rather
 * than the more common #if($status.value) since this method evaluates to the
 * boolean 'false' if the content of $status.value is the String "false" - not
 * what we want.
 *
 * @param path the name of the field to bind to
 * @param options a map (value=label) of all the available options
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
*#
#macro( springFormSingleSelect $path $options $attributes )
    #springBind($path)
    <select id="${status.expression}" name="${status.expression}" ${attributes}>
        #foreach($option in $options.keySet())
            <option value="${option}"
            #if("$!status.value" == "$option")
                selected="selected"
            #end>
            ${options.get($option)}</option>
        #end
    </select>
#end

#**
 * springFormMultiSelect
 *
 * Show a listbox of options allowing the user to make 0 or more choices from
 * the list of options.
 *
 * @param path the name of the field to bind to
 * @param options a map (value=label) of all the available options
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
*#
#macro( springFormMultiSelect $path $options $attributes )
    #springBind($path)
    <select multiple="multiple" id="${status.expression}" name="${status.expression}" ${attributes}>
        #foreach($option in $options.keySet())
            <option value="${option}"
            #foreach($item in $status.value)
                #if($item == $option)
                    selected="selected"
                #end
            #end
            >${options.get($option)}</option>
        #end
    </select>
#end

#**
 * springFormRadioButtons
 *
 * Show radio buttons.
 *
 * @param path the name of the field to bind to
 * @param options a map (value=label) of all the available options
 * @param separator the html tag or other character list that should be used to
 *    separate each option.  Typically '&nbsp;' or '<br>'
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
*#
#macro( springFormRadioButtons $path $options $separator $attributes )
    #springBind($path)
    #foreach($option in $options.keySet())
        <input type="radio" name="${status.expression}" value="${option}"
        #if("$!status.value" == "$option")
            checked="checked"
        #end
        ${attributes}
        #springCloseTag()
        ${options.get($option)} ${separator}
    #end
#end

#**
 * springFormCheckboxes
 *
 * Show checkboxes.
 *
 * @param path the name of the field to bind to
 * @param options a map (value=label) of all the available options
 * @param separator the html tag or other character list that should be used to
 *    separate each option.  Typically '&nbsp;' or '<br>'
 * @param attributes any additional attributes for the element (such as class
 *    or CSS styles or size
*#
#macro( springFormCheckboxes $path $options $separator $attributes )
    #springBind($path)
    #foreach($option in $options.keySet())
        <input type="checkbox" name="${status.expression}" value="${option}"
        #foreach($item in $status.value)
            #if($item == $option) checked="checked" #end
        #end
        ${attributes} #springCloseTag()
        ${options.get($option)} ${separator}
    #end
    <input type="hidden" name="_${status.expression}" value="on"/>
#end

#**
 * springShowErrors
 *
 * Show validation errors for the currently bound field, with
 * optional style attributes.
 *
 * @param separator the html tag or other character list that should be used to
 *    separate each option. Typically '<br>'.
 * @param classOrStyle either the name of a CSS class element (which is defined in
 *    the template or an external CSS file) or an inline style.  If the value passed in here
 *    contains a colon (:) then a 'style=' attribute will be used, else a 'class=' attribute
 *    will be used.
*#
#macro( springShowErrors $separator $classOrStyle )
    #foreach($error in $status.errorMessages)
        #if($classOrStyle == "")
            <b>${error}</b>
        #else
            #if($classOrStyle.indexOf(":") == -1)
                #set($attr="class")
            #else
                #set($attr="style")
            #end
            <span ${attr}="${classOrStyle}">${error}</span>
        #end
        ${separator}
    #end
#end

#**
 * springCloseTag
 *
 * Simple macro to close an HTML tag that has no body with '>' or '/>',
 * depending on the value of a 'springXhtmlCompliant' variable in the
 * template context.
 *#
#macro( springCloseTag )#if($springXhtmlCompliant)/>#else>#end #end

#**
 *
#macro(zz91UlTag $attributes $urlPrefix $id $name $objList  )
 <ul $attributes>
  #foreach($obj in $objList)
   <li>·<a href="123${obj.get($id)}.htm">$obj[$name]</a></li>
  #end
 </ul>
#end
*#
#macro(zz91UlTag $attributes $urlPrefix  $objList  )
 <ul $attributes>
  #set ($var1="newsId")
  #evaluate("obj.$var1")
  #foreach($obj in $objList)
   <li>·<a href='123#evaluate("$obj.$var1").htm'>$obj.newsName</a></li>
  #end
 </ul>
#end

##通用分页宏,查询参数直接跟在url后面,主要用于生意管家等对URL静态化要求不高的页面
#macro(pageBar $totalPages $currentPage $suffixUrl)
	#if($totalPages>0)
		#set($itemCountPerPage=10)
		#if($currentPage/$itemCountPerPage>0)
			#set($start=($currentPage/$itemCountPerPage)*$itemCountPerPage)
		#else
			#set($start=1)
		#end
		#if($currentPage > $itemCountPerPage)
			#set($startPage=$start - 1)
			<a href="?p=$startPage${suffixUrl}" style='color:red'>...</a>
		#end
		#if($currentPage+$itemCountPerPage<$totalPages)
			#set($end=$start+9)
		#elseif($totalPages<$itemCountPerPage)
			#set($end=$totalPages)
		#else
			#set($end=$itemCountPerPage)
		#end
		#foreach($i in [$start..$end])
			#if($currentPage==$i)
				<a href="?p=$i${suffixUrl}" style='color:red'>$i</a>
			#else
				<a href="?p=$i${suffixUrl}">$i</a>
			#end
		#end
		#if($currentPage+ 10<$totalPages)
			#set($endPage=$end + 1)
			<a href="?p=$endPage${suffixUrl}">...</a>
		#end
	#end
#end

##通用分页宏,查询参数静态化后编码进url,主要用于前台等需要SEO的页面
#macro(staticPageBar $totalPages $currentPage $url)
	#if($totalPages>0)
		#set($itemCountPerPage=10)
		#if($currentPage/$itemCountPerPage>0)
			#set($start=($currentPage/$itemCountPerPage)*$itemCountPerPage)
		#else
			#set($start=1)
		#end
		#if($currentPage > $itemCountPerPage)
			#set($startPage=$start - 1)
			<a href="${url}_p${startPage}.htm" style='color:red'>...</a>
		#end
		#if($currentPage+$itemCountPerPage<$totalPages)
			#set($end=$start+9)
		#elseif($totalPages<$itemCountPerPage)
			#set($end=$totalPages)
		#else
			#set($end=$itemCountPerPage)
		#end
		#foreach($i in [$start..$end])
			#if($currentPage==$i)
				<a href="${url}_p${i}.htm" style='color:red'>$i</a>
			#else
				<a href="${url}_p${i}.htm">$i</a>
			#end
		#end
		#if($currentPage+ 10<$totalPages)
			#set($endPage=$end + 1)
			<a href="${url}_p${endPage}.htm">...</a>
		#end
	#end
#end

##通用分页宏2,查询参数直接跟在url后面,主要用于生意管家等对URL静态化要求不高的页面
#macro(pageBar2 $totalRecords $totalPages $currentPage $suffixUrl)
	#if($totalPages>0)
		#set($itemCountPerPage=10)
	<div id="pageleft">
		共<b>$!{totalRecords}</b>条信息&nbsp;&nbsp;<b>$!{currentPages}</b>/<b>$!{totalPages}</b> 页&nbsp;&nbsp;<b>10</b> /页
	</div>
	<div align="right" id="pagetop">
	  <font color="#666666">
	  	首页
  	  </font>
	  	#if($currentPage > 1)
	  		#set($prevPage=$currentPage - 1)
	  		<a href="?p=$prevPage">上一页</a>
	  	#end

	  	#if($currentPage < $totalPages)
	  		#set($nextPage=$currentPage + 1)
	  		<a href="?p=$nextPage">下一页</a>
	  	#end

	  <a href="?p=$totalPages">尾页</a>
	</div>
	#end
#end



##通用分页宏2,查询参数静态化后编码进url,主要用于前台等需要SEO的页面,并且不显示首页、尾页和总条数
#macro(staticPageBar2 $totalPages $currentPage $url)
	#if($totalPages>0)
		#set($itemCountPerPage=10)
	  	#if($currentPage > 1)
	  		#set($prevPage=$currentPage - 1)
	  		<a href="${url}_p${prevPage}.htm">上一页</a>
	  	#end

	  	#if($currentPage < $totalPages)
	  		#set($nextPage=$currentPage + 1)
	  		<a href="${url}_p${nextPage}.htm">下一页</a>
	  	#end
	#end
#end

##Share
#macro(share $title)
	<ul>
        <li class="sociablefirst">
            <a rel="nofollow"  href="http://twitter.com/home?status=${title}" title="Twitter">
                <img src="$!{address.images}/services-sprite.gif" title="Twitter" alt="Twitter" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-343px -55px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://www.facebook.com/share.php?u=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;t=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe" title="Facebook">
                <img src="$!{address.images}/services-sprite.gif" title="Facebook" alt="Facebook" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-343px -1px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://delicious.com/post?url=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe&amp;notes=Regelmatig%20vragen%20klanten%20ons%20om%20een%20website%20te%20bouwen%20waarbij%20je%20niet%20moet%20scrollen.%20Waarom%20niet%20scrollen%3F%20Omdat%20de%20belangrijkste%20info%20in%20%C3%A9%C3%A9n%20oogopslag%20zichtbaar%20moet%20zijn%2C%20is%20dan%20het%20vaak%20gehoorde%20argument.%0D%0AAl%20sinds%201994%20discussi%C3%ABren%20webdesigne" title="del.icio.us">
                <img src="$!{address.images}/services-sprite.gif" title="del.icio.us" alt="del.icio.us" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-199px -1px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://nujij.nl/jij.lynkx?t=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe&amp;u=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;b=Regelmatig%20vragen%20klanten%20ons%20om%20een%20website%20te%20bouwen%20waarbij%20je%20niet%20moet%20scrollen.%20Waarom%20niet%20scrollen%3F%20Omdat%20de%20belangrijkste%20info%20in%20%C3%A9%C3%A9n%20oogopslag%20zichtbaar%20moet%20zijn%2C%20is%20dan%20het%20vaak%20gehoorde%20argument.%0D%0AAl%20sinds%201994%20discussi%C3%ABren%20webdesigne" title="NuJIJ">
                <img src="$!{address.images}/services-sprite.gif" title="NuJIJ" alt="NuJIJ" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-253px -37px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://www.google.com/bookmarks/mark?op=edit&amp;bkmk=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe&amp;annotation=Regelmatig%20vragen%20klanten%20ons%20om%20een%20website%20te%20bouwen%20waarbij%20je%20niet%20moet%20scrollen.%20Waarom%20niet%20scrollen%3F%20Omdat%20de%20belangrijkste%20info%20in%20%C3%A9%C3%A9n%20oogopslag%20zichtbaar%20moet%20zijn%2C%20is%20dan%20het%20vaak%20gehoorde%20argument.%0D%0AAl%20sinds%201994%20discussi%C3%ABren%20webdesigne" title="Google Bookmarks">
                <img src="$!{address.images}/services-sprite.gif" title="Google Bookmarks" alt="Google Bookmarks" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-91px -19px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe" title="StumbleUpon">
                <img src="$!{address.images}/services-sprite.gif" title="StumbleUpon" alt="StumbleUpon" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-217px -55px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://technorati.com/faves?add=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F" title="Technorati">
                <img src="$!{address.images}/services-sprite.gif" title="Technorati" alt="Technorati" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-271px -55px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe&amp;bodytext=Regelmatig%20vragen%20klanten%20ons%20om%20een%20website%20te%20bouwen%20waarbij%20je%20niet%20moet%20scrollen.%20Waarom%20niet%20scrollen%3F%20Omdat%20de%20belangrijkste%20info%20in%20%C3%A9%C3%A9n%20oogopslag%20zichtbaar%20moet%20zijn%2C%20is%20dan%20het%20vaak%20gehoorde%20argument.%0D%0AAl%20sinds%201994%20discussi%C3%ABren%20webdesigne" title="Digg">
                <img src="$!{address.images}/services-sprite.gif" title="Digg" alt="Digg" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-235px -1px" class="sociable-hovers" />
            </a>
        </li>
        <li>
            <a rel="nofollow"  href="http://reddit.com/submit?url=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe" title="Reddit">
                <img src="$!{address.images}/services-sprite.gif" title="Reddit" alt="Reddit" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-55px -55px" class="sociable-hovers" />
            </a>
        </li>
        <li class="sociablelast">
            <a rel="nofollow"  href="http://www.ekudos.nl/artikel/nieuw?url=http%3A%2F%2Fglue.be%2Fblog%2F2010%2F04%2Fmag-je-scrollen-op-een-website-realiteit-en-mythe%2F&amp;title=Mag%20je%20scrollen%20op%20een%20website%3F%20Realiteit%20%C3%A9n%20mythe&amp;desc=Regelmatig%20vragen%20klanten%20ons%20om%20een%20website%20te%20bouwen%20waarbij%20je%20niet%20moet%20scrollen.%20Waarom%20niet%20scrollen%3F%20Omdat%20de%20belangrijkste%20info%20in%20%C3%A9%C3%A9n%20oogopslag%20zichtbaar%20moet%20zijn%2C%20is%20dan%20het%20vaak%20gehoorde%20argument.%0D%0AAl%20sinds%201994%20discussi%C3%ABren%20webdesigne" title="eKudos">
                <img src="$!{address.images}/services-sprite.gif" title="eKudos" alt="eKudos" style="width: 16px; height: 16px; background: transparent url($!{address.images}/services-sprite.png) no-repeat; background-position:-307px -1px" class="sociable-hovers" />
            </a>
        </li>
    </ul>
#end

##pagination for blog
#macro(pagination $totalPages $currentPage $url)
	#if($totalPages>0)
		#set($itemCountPerPage=10)
		
		#if($currentPage/$itemCountPerPage>0)
			#set($start=($currentPage/$itemCountPerPage)*$itemCountPerPage)
		#else
			#set($start=1)
		#end
		
		#set($end=(($currentPage/$itemCountPerPage+1)*$itemCountPerPage))
		
		#if($start > 1)
			#set($startPage=$start+-1)
			<a class="prev" href="${url}p=${startPage}"> <  Prev</a>
		#else
			<span class="prev disabled"> <  Prev</span>
		#end
		
		#foreach($i in [$start..$end])
			#if($totalPages >= $i)
    			#if($currentPage==$i)
    				<span class="current">$i</span>
    			#else
    				<a href="${url}p=${i}">$i</a>
    			#end
			#end
		#end
		
		#if($end<$totalPages)
			#set($endPage=$end+1)
			<a class="next" href="${url}p=${endPage}">Next  > </a>
		#else
			<span class="next disabled">Next  > </span>
		#end
	#end
#end